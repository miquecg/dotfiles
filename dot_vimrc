""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" BASIC EDITING CONFIGURATION
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set autoread
set backspace=indent,eol,start
set hidden
set history=1000

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" USER INTERFACE
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set background=light
set cmdheight=2
set cursorline
set laststatus=2
set mouse=a
set noshowmode
set number
set ruler
set scrolloff=3
set shortmess+=c
set showcmd
set showmatch
set sidescrolloff=5
set termguicolors
set updatetime=250
set wildmenu

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" INDENTATION
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set autoindent
set expandtab
set shiftwidth=2
let &softtabstop=&shiftwidth

filetype plugin indent on

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" SEARCH
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set hlsearch
set ignorecase
set incsearch
set smartcase

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" TEXT
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set encoding=utf-8
set linebreak
set listchars=extends:▸,nbsp:⎵,precedes:◂,tab:⇥·

" Highlight trailing whitespace
match ErrorMsg /\s\+$/
syntax on

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MISCELLANEOUS
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set confirm
set grepprg=rg\ --vimgrep\ --smart-case\ --follow
set viminfofile=NONE

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MAPPINGS
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Move between buffers
nnoremap <silent> [b :bprevious<CR>
nnoremap <silent> ]b :bnext<CR>
nnoremap <silent> [B :bfirst<CR>
nnoremap <silent> ]B :blast<CR>
" Move between active windows
nnoremap <silent> <C-H> <C-W>h
nnoremap <silent> <C-J> <C-W>j
nnoremap <silent> <C-K> <C-W>k
nnoremap <silent> <C-L> <C-W>l
" Resize current split by +/- 5
nnoremap <silent> <C-Left> :vertical resize -5<CR>
nnoremap <silent> <C-Down> :resize +5<CR>
nnoremap <silent> <C-Up> :resize -5<CR>
nnoremap <silent> <C-Right> :vertical resize +5<CR>
" Move cursor vertically by visual line
nnoremap <silent> j gj
nnoremap <silent> k gk
" Move visual selection
xnoremap <silent> J :m '>+1<CR>gv=gv
xnoremap <silent> K :m '<-2<CR>gv=gv
" Make . work with visually selected lines
xnoremap <silent> . :normal.<CR>
" Toggle options
nnoremap yob :let &background=(&background == "dark" ? "light" : "dark")<CR>
nnoremap yoi :set ignorecase!<CR>
nnoremap yon :set number!<CR>
nnoremap yow :set wrap!<CR>
" Copy to clipboard register
vnoremap <C-C> "*y

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" LEADER MAPPINGS
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let mapleader="\<Space>"

" Clear current search highlights
nnoremap <leader><Space> :nohlsearch<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" PLUGINS
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
call plug#begin()

Plug 'vim-airline/vim-airline'
Plug 'lifepillar/vim-gruvbox8'
Plug 'NLKNguyen/papercolor-theme'
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
Plug 'scrooloose/nerdtree', {'on': 'NERDTreeToggle'}
Plug 'tpope/vim-commentary'
Plug 'airblade/vim-gitgutter'
Plug 'sheerun/vim-polyglot'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'sbdchd/neoformat'
Plug 'ryanoasis/vim-devicons'

call plug#end()

" airline
if !exists('g:airline_symbols')
  let g:airline_symbols={}
endif

let g:airline_symbols.colnr=' '

" https://sw.kovidgoyal.net/kitty/faq/#using-a-color-theme-with-a-background-color-does-not-work-well-in-vim
if &term == 'xterm-kitty'
  let &t_ut=''
endif

" https://github.com/vim/vim/issues/11729
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

" gruvbox8
let g:gruvbox_filetype_hi_groups=1

function! ToggleColors()
  if &diff | colorscheme PaperColor | else | colorscheme gruvbox8_hard | endif
endfunction

call ToggleColors()

augroup VimDiff
  autocmd!
  autocmd OptionSet diff ++nested call ToggleColors()
augroup END

" fzf.vim - passing args to ripgrep
command! -bang -nargs=* RG call fzf#vim#grep("rg --column --line-number --no-heading --color=always --smart-case ".<q-args>, 1, <bang>0)

" fzf.vim - buffer delete
function! s:list_buffers()
  redir => list
  silent ls
  redir END
  return split(list, "\n")
endfunction

function! s:delete_buffers(lines)
  execute 'bwipeout' join(map(a:lines, {_, line -> split(line)[0]}))
endfunction

command! BD call fzf#run(fzf#wrap({
  \ 'source': s:list_buffers(),
  \ 'sink*': {lines -> s:delete_buffers(lines)},
  \ 'options': '--multi --reverse --bind ctrl-a:select-all+accept'
  \ }))

" NERDTree
let NERDTreeBookmarksFile=expand("$HOME/.vim/NERDTreeBookmarks")

" vim-gitgutter
let g:gitgutter_highlight_linenrs=1

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" PLUGINS MAPPINGS
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <silent> <leader>b  :Buffers<CR>
nnoremap <silent> <leader>f  :Files<CR>
nnoremap <silent> <leader>m  :Marks<CR>
nnoremap <silent> <leader>o  :<C-U>CocList outline<CR>
nnoremap <silent> <leader>t  :NERDTreeToggle<CR>
nnoremap <silent> <leader>nf :NERDTreeFind<CR>

nmap <silent> <leader>rn <Plug>(coc-rename)
nmap <silent> <leader>rf <Plug>(coc-refactor)
xmap <silent> <leader>f  :Neoformat<CR>
xmap <silent> <leader>a  <Plug>(coc-codeaction-selected)
" Example: action in current paragraph `<leader>aap`
nmap <silent> <leader>a  <Plug>(coc-codeaction-selected)
" Action in current buffer
nmap <silent> <leader>ac <Plug>(coc-codeaction)
" Fix current line
nmap <silent> <leader>qf <Plug>(coc-fix-current)

nmap <silent> [g <Plug>(coc-diagnostic-prev)
nmap <silent> ]g <Plug>(coc-diagnostic-next)
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

" Map function text objects
xmap <silent> if <Plug>(coc-funcobj-i)
omap <silent> if <Plug>(coc-funcobj-i)
xmap <silent> af <Plug>(coc-funcobj-a)
omap <silent> af <Plug>(coc-funcobj-a)

" Trigger completion and navigate to next and previous items
function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1] =~ '\s'
endfunction

inoremap <silent><expr> <TAB>
                      \ coc#pum#visible() ? coc#pum#next(1):
                      \ <SID>check_back_space() ? "\<Tab>" :
                      \ coc#refresh()
inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<C-H>"

" Auto-select first completion and format on enter
inoremap <silent><expr> <CR>
                      \ coc#pum#visible() ? coc#_select_confirm() :
                      \ "\<C-G>u\<CR>\<C-R>=coc#on_enter()\<CR>"

" Highlight symbol and its references when holding cursor
autocmd CursorHold * silent call CocActionAsync('highlight')

" Command to fold current buffer
command! -nargs=? Fold :call CocAction('fold', <f-args>)
